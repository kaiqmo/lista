{"version":3,"sources":["assets/logo.jpeg","firebase/firebase.utils.js","redux/user/user.selector.js","components/header-component/header-component.jsx","components/footer/footer.component.jsx","redux/user/user.types.js","redux/user/user.actions.js","components/custom-button/custom-button.component.jsx","redux/list/list.types.js","redux/list/list.actions.js","redux/list/list.selector.js","components/collection-item/collection-item.component.jsx","components/form-input/form-input.component.jsx","components/createItem/createItem.component.jsx","pages/todolist/todolist.component.jsx","pages/public_list/public_list.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in/sign-in.component.jsx","App.js","redux/user/user.reducer.jsx","redux/list/list.reducer.jsx","redux/root-reducer.jsx","redux/store.js","index.js"],"names":["module","exports","CreateUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","userList","collection","then","querySnapshot","docs","map","data","lista","addItem","text","title","date","id","String","getTime","catch","error","updateItem","item","snapShot","val","e","errorCode","code","errorMessage","completedItem","todays_date","completed","update","UpdateList","deleteItem","delete","getAll","ref","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","selectCurrentUser","createSelector","state","user","currentUser","mapStateToProps","createStructuredSelector","connect","hidden","className","Image","href","rounded","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","secondary","square","Footer","classes","Grid","container","xs","Paper","UserActionTypes","setCurrentUser","type","payload","CustomButton","children","isGoogleSignIn","inverted","danger","success","OtherProps","ListActionTypes","setCurrentList","list","selectCurrentList","currentList","handleButtons","button","r","sm","onClick","FormInput","handleChange","label","otherProps","onChange","value","length","CreateItem","props","handleSubmit","event","preventDefault","setState","target","name","onSubmit","this","required","React","Component","to","key","PublicList","s","onSnapshot","source","metadata","hasPendingWrites","dispatch","SignIn","password","signInWithEmailAndPassword","SignUp","confirmPassword","alert","createUserWithEmailAndPassword","SignInAndSignUpPage","App","unsubscribeFromAuth","onAuthStateChanged","includeMetadataChanges","path","exact","component","render","INITIAL_STATE","userReducer","action","listReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b315b262.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b03bf9ce.jpeg\";","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// sempre precisa importa o firease completo pra dps poder dar import no store e auth\r\nconst config  = {\r\n    apiKey: \"AIzaSyDuHTtUoxaEUp7Bc05pmaDE6Quukvp0k1A\",\r\n    authDomain: \"udemy-crown-41095.firebaseapp.com\",\r\n    databaseURL: \"https://udemy-crown-41095.firebaseio.com\",\r\n    projectId: \"udemy-crown-41095\",\r\n    storageBucket: \"udemy-crown-41095.appspot.com\",\r\n    messagingSenderId: \"468641248743\",\r\n    appId: \"1:468641248743:web:f2b938d84adb228955f942\",\r\n    measurementId: \"G-H9HBJ6PSFX\"\r\n  };\r\n\r\n  \r\n  export const CreateUserProfileDocument = async (userAuth, additionalData) =>{\r\n      if(!userAuth) return; // if the user doesnt exist\r\n      \r\n        const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n        const snapShot = await userRef.get();\r\n        if(!snapShot.exists ){\r\n          const { displayName, email} = userAuth;\r\n          const createdAt = new Date();\r\n          // se o usuario nao existe ele faz um novo!\r\n          try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n            // NotificationManager.success(\"Account Created\", \"Success\");\r\n\r\n\r\n          }catch(error){\r\n              console.log('error creating user',error.message);\r\n          }\r\n        }else{\r\n            \r\n          var userList = firestore.collection(`users/${userAuth.uid}/lista/`);\r\n          var lista = await userList.get().then(querySnapshot => {\r\n            return  querySnapshot.docs.map(docs => docs.data());\r\n          });\r\n          \r\n          // console.log(lista);\r\n\r\n          const { displayName, email} = userAuth;\r\n          const createdAt = new Date();\r\n\r\n          try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                lista,\r\n                ...additionalData\r\n            })\r\n          }catch(error){\r\n              console.log('error creating user',error.message);\r\n          }\r\n        }\r\n        // console.log(snapShot);\r\n        return userRef;\r\n  };\r\n\r\n  export const addItem = async(userAuth,text,title,date) => {\r\n    var id = String(new Date().getTime());\r\n    const data = {\r\n      text: text,\r\n      // title:title,\r\n      // date:date,\r\n      id:id,\r\n      createdAt:id\r\n    };\r\n    await firestore.collection(`users/${userAuth.uid}/lista`).doc(id)\r\n      .set(data)\r\n      .then(async () => {\r\n          console.log('item added!');\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        // NotificationManager.error(error.message, \"Create Item failed\");\r\n        // this.setState({ isSubmitting: false });\r\n      });\r\n  };\r\n\r\n  export const updateItem = async(userAuth,item)=>{\r\n    var data = {\r\n      text:item.text,\r\n      id:item.id,\r\n      createdAt:item.id\r\n    };\r\n      await firestore.collection(`users/${userAuth.uid}/lista`).doc(item.id).set(data)\r\n      .then( snapShot=>snapShot.val())\r\n      .catch( e =>({\r\n        errorCode:e.code,\r\n        errorMessage:e.message\r\n      }));\r\n  }\r\n\r\n  export const completedItem = async(userAuth,item) => {\r\n    var todays_date = new Date();\r\n    var data = {\r\n      completed:todays_date,\r\n    };\r\n    // console.log(userAuth.uid);\r\n    if(userAuth!==0){\r\n      return await firestore.collection(`users/${userAuth.uid}/lista`).doc(item.id).update(data)\r\n      .then( snapShot=>snapShot.val())\r\n      .catch( e =>({\r\n        errorCode:e.code,\r\n        errorMessage:e.message\r\n      }));\r\n    }\r\n    else{\r\n      var uid = \"4hYmPE0ZvhPoHA0kYJaQu8KdrCs2\"\r\n      return await firestore.collection(`users/${uid}/lista/`).doc(item.id).update(data)\r\n      .then( snapShot=>{console.log(`snap`,snapShot);snapShot.val()})\r\n      .catch( e =>({\r\n        errorCode:e.code,\r\n        errorMessage:e.message\r\n      }));\r\n    }\r\n    \r\n  };\r\n\r\n\r\n  export const UpdateList = async(userAuth)=>{\r\n    if(!userAuth) return 0; // if the user doesnt exist\r\n      \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    \r\n    var userList = firestore.collection(`users/${userAuth.uid}/lista/`);\r\n    var lista =await userList.get().then(querySnapshot => {\r\n            return  querySnapshot.docs.map(docs => docs.data());\r\n          });\r\n    // console.log(lista);\r\n\r\n           const { displayName, email} = userAuth;\r\n           const createdAt = new Date();\r\n \r\n           try{\r\n             await userRef.set({\r\n                 displayName,\r\n                 email,\r\n                 createdAt,\r\n                 lista\r\n             })\r\n           }catch(error){\r\n               console.log('error creating user',error.message);\r\n           }\r\n\r\n  }\r\n\r\n  export const deleteItem = async(userAuth,item) => {\r\n    // Create a reference to the cities collection\r\n\r\n    var lista = firestore.collection(`users/${userAuth.uid}/lista/`);\r\n    \r\n    // Create a query against the collection.\r\n    await lista.doc(item.id).delete()\r\n      .then(() => {\r\n        console.log('Item removed!');\r\n      })\r\n      .catch(error => {\r\n        return error;\r\n        // NotificationManager.error(error.message, \"Delete item failed\");\r\n        // this.setState({ isSubmitting: false });\r\n      });\r\n  };\r\n  \r\n  // export const deleteAll = async(userAuth,item) => {\r\n  //   // Create a reference to the cities collection\r\n\r\n  //   var lista = firestore.collection(`users/${userAuth.uid}/`);\r\n    \r\n  //   // Create a query against the collection.\r\n  //   await lista.doc(\"lista\").delete()\r\n  //     .then(() => {\r\n  //       console.log('Lista removed!');\r\n  //     })\r\n  //     .catch(error => {\r\n  //       return error;\r\n  //       // NotificationManager.error(error.message, \"Delete item failed\");\r\n  //       // this.setState({ isSubmitting: false });\r\n  //     });\r\n  // };\r\n  export const getAll = async() =>{\r\n    var ref = firestore.collection(\"users\");\r\n    // var lista = [];\r\n    return ref.get().then(doc => { \r\n      return doc.docs[0].data();\r\n      // doc.docs.forEach( d=>{console.log(d)\r\n      //   var data = d.data();\r\n      //   if(data.lista)\r\n          // lista.push(data);\r\n      // });\r\n      // return lista;\r\n    }); \r\n  }\r\n\r\n export const Snapshots = async () =>{\r\n   var ref = firestore.collection(\"users\");\r\n  return await ref.onSnapshot(function(doc) {\r\n    var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n    console.log(source, \" data: \", doc.docs[0].data());\r\n    return doc.docs[0].data();\r\n        // lista.push(data);\r\n    });\r\n    // return lista;\r\n }\r\n\r\n\r\n  firebase.initializeApp(config);\r\n\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({\r\n      prompt:'select_account'\r\n  });\r\n\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n  export default firebase;","import { createSelector} from 'reselect';\r\n\r\nconst SelectUser = state => state.user;\r\n\r\nexport const selectCurrentUser = createSelector(\r\n    [SelectUser],\r\n    (user)=> user.currentUser\r\n)\r\n\r\n// pode passar varias no array , ou varias\r\n","import React from 'react';\r\nimport { Link  } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport './header.styles.scss';\r\n\r\n// import {ReactComponent as Logo} from '../../assets/crown.svg';\r\nimport Logo from '../../assets/logo.jpeg'\r\nimport {auth} from '../../firebase/firebase.utils';\r\n\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {selectCurrentUser} from '../../redux/user/user.selector';\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nconst Header = ({currentUser,hidden}) =>{\r\n\r\n    \r\n    function signOut() {\r\n        auth.signOut();\r\n    }\r\n\r\n    return(\r\n    <div className='header'>\r\n        {/* <Link className='logo-container' to='/'>\r\n            {/* <Logo className='logo' /> */}\r\n            <Image  href=\"../../assets/logo.jpeg\" rounded/>\r\n        {/* </Link> */} \r\n        {/* <div className='options'> */}\r\n              {/* <h1>Kaique & Natália</h1> */}\r\n        {/* <Link className='option'  to='/'><h3>HOME</h3></Link> */}\r\n            {/* {\r\n                currentUser?\r\n                \r\n                <div className='option' onClick={() => signOut()\r\n                }><h3>\r\n                    SIGN OUT\r\n                </h3>\r\n                </div>\r\n                :\r\n                <Link className='option' to='/signin'><h3>SIGN IN</h3> </Link>\r\n            } */}\r\n        {/* </div> */}\r\n    </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser : selectCurrentUser\r\n});\r\n\r\nexport default  connect(mapStateToProps)(Header);","import React from 'react';\r\nimport './footer.component.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    square:false\r\n  },\r\n}));\r\n\r\n\r\nconst Footer = ()=> {\r\n    const classes= useStyles();\r\n    return(\r\n    <div className=\"footer\">\r\n        <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>Creator: Kaique</Paper>\r\n        </Grid>\r\n        {/* <Grid item xs>\r\n          <Paper className={classes.paper}>Email: kaiqmowork@gmail.com</Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>Github: @kaiqmo</Paper>\r\n        </Grid> */}\r\n      </Grid>\r\n        \r\n        \r\n         \r\n \r\n    </div>\r\n)};\r\nexport default Footer;","export const UserActionTypes = {\r\n    SET_CURRENT_USER:\"SET_CURRENT_USER\",\r\n    ADD_USER_ITEM:\"ADD_USER_ITEM\",\r\n    DELETE_USER_ITEM:\"DELETE_USER_ITEM\",\r\n    ALTER_USER_ITEM:\"ALTER_USER_ITEM\"\r\n};","import {UserActionTypes} from './user.types';\r\n\r\nexport const setCurrentUser = user =>({\r\n    type: UserActionTypes.SET_CURRENT_USER,\r\n    payload: user\r\n});\r\n\r\nexport const AddItem = user =>({\r\n    type: UserActionTypes.ADD_USER_ITEM,\r\n    payload: user\r\n});\r\n\r\nexport const AlterItem = user =>({\r\n    type: UserActionTypes.ALTER_USER_ITEM,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const DeleteItem = user =>({\r\n    type: UserActionTypes.DELETE_USER_ITEM,\r\n    payload: user\r\n});\r\n\r\n\r\n//praticamente um json","import React from 'react';\r\nimport './custom-button.styles.scss';\r\n\r\nconst CustomButton = ({ children, isGoogleSignIn, inverted, danger, success, ...OtherProps}) =>(\r\n    <button className={` ${inverted ? 'inverted':''} ${danger ? 'danger':''} ${success ? 'success':''} ${isGoogleSignIn ? 'google-sign-in':''} custom-button`} {...OtherProps}>\r\n        {children}\r\n    </button>\r\n)\r\nexport default CustomButton;","export const ListActionTypes = {\r\n    SET_CURRENT_LIST:\"SET_CURRENT_LIST\",\r\n};","import {ListActionTypes} from './list.types';\r\n\r\nexport const setCurrentList = list =>({\r\n    type: ListActionTypes.SET_CURRENT_LIST,\r\n    payload: list\r\n});\r\n\r\n\r\n//praticamente um json","import { createSelector} from 'reselect';\r\n\r\nconst SelectList = state => state.list;\r\n\r\nexport const selectCurrentList = createSelector(\r\n    [SelectList],\r\n    (list)=> list.currentList\r\n)\r\n\r\n// pode passar varias no array , ou varias\r\n","import React from 'react';\r\n\r\nimport './collection-item.styles.scss';\r\n\r\nimport {connect} from 'react-redux';\r\nimport CustomButton from '../custom-button/custom-button.component.jsx';\r\nimport {selectCurrentUser} from '../../redux/user/user.selector';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {auth, deleteItem,UpdateList, completedItem,updateItem} from '../../firebase/firebase.utils.js';\r\n\r\nimport {setCurrentUser} from '../../redux/user/user.actions';\r\nimport {setCurrentList} from '../../redux/list/list.actions';\r\nimport {selectCurrentList} from'../../redux/list/list.selector';\r\n\r\n\r\n\r\nconst handleButtons = async(item,button)=>{\r\n  try{\r\n      if(auth.currentUser){\r\n      var userAuth = auth.currentUser;\r\n      switch(button){\r\n        case \"deleteItem\":\r\n          await deleteItem(userAuth,item);\r\n          break;\r\n        case \"updateItem\":\r\n          await updateItem(userAuth,item);\r\n          break;\r\n        case \"completeItem\":\r\n          await completedItem(userAuth,item);\r\n          break;\r\n        case \"Incomplete\":\r\n          await updateItem(userAuth,item);\r\n          break;\r\n        default: return false;\r\n  \r\n      }\r\n      await UpdateList(userAuth).then((r)=> {\r\n          setCurrentUser({id:r});\r\n          setCurrentList({id:r});\r\n      });\r\n    }else{\r\n      switch(button){\r\n        case \"completeItem\":\r\n          await completedItem(0,item);\r\n          break;\r\n          default: return false;\r\n      }\r\n      await UpdateList(userAuth).then((r)=> {\r\n          setCurrentUser({id:r});\r\n          setCurrentList({id:r});\r\n      });\r\n    }\r\n    \r\n  }catch(error){\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst CollectionItem = ( { item,currentUser,completed }) => {\r\n    return(\r\n    \r\n    <div className={` ${completed? completed:''} collection-item`}>\r\n        <div className='collection-footer'>\r\n        <Grid item xs={6}>\r\n              {\r\n                item?\r\n                \r\n                // <div className='title'>{item.title}</div>\r\n                <div className='name'><h3>\r\n                  {item.text}\r\n                  </h3>\r\n                  </div>\r\n                // <div className=\"due_date\">{item.date}</div>\r\n                \r\n                :\r\n              \r\n                ''\r\n              }\r\n        </Grid>\r\n        <Grid item sm={6}>\r\n          <div className=\"inline-buttons\" >\r\n            \r\n            {\r\n              currentUser?\r\n              <div>\r\n              <CustomButton danger onClick={()=>handleButtons(item,\"deleteItem\")} >Delete</CustomButton>\r\n              <CustomButton danger onClick={()=>handleButtons(item,\"Incomplete\")} >Incomplete</CustomButton>\r\n              </div>\r\n              :''\r\n            }\r\n          \r\n            {\r\n              item.completed?\r\n              // <h3>Vamos ter esse!</h3>\r\n              <h3></h3>\r\n              :\r\n              <CustomButton success onClick={()=>handleButtons(item,\"completeItem\")} >Escolher</CustomButton>\r\n            }\r\n            \r\n            \r\n          </div>\r\n        </Grid> \r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser : selectCurrentUser,\r\n  currentList : selectCurrentList\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CollectionItem);\r\n","import React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({handleChange, label, ...otherProps}) =>(\r\n    <div className='group'>\r\n        <input className='form-input' onChange={handleChange} {...otherProps}/>\r\n        {\r\n            label ?//se tiver label faz se n  null\r\n            (<label className={`${otherProps.value.length ? 'shrink' :'' } form-input-label`}>\r\n                {label}\r\n            </label>)\r\n            : null\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default FormInput;","import React from 'react';\r\n// import {Redirect} from 'react-router-dom';\r\nimport './createItem.component.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component.jsx';\r\nimport CustomButton from '../custom-button/custom-button.component.jsx';\r\nimport {auth, addItem,UpdateList} from '../../firebase/firebase.utils.js';\r\nimport {setCurrentUser} from '../../redux/user/user.actions';\r\n\r\nexport default class CreateItem extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text:'',\r\n            title:'',\r\n            date:''\r\n        }\r\n    }\r\n    handleSubmit = async event=>{\r\n        event.preventDefault();\r\n        try{\r\n            var userAuth = auth.currentUser;\r\n            await addItem(userAuth,this.state.text,this.state.title,this.state.date);\r\n            this.setState({});\r\n            await UpdateList(userAuth).then((r)=> {\r\n                console.log(r);\r\n                setCurrentUser({...r.data()});\r\n              })\r\n        }catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n    handleChange = event => {\r\n        const {value, name} = event.target;\r\n        this.setState({ [name] : value});\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='new-task'>\r\n                <h2>Create a new task</h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                        <FormInput \r\n                            name='title' type='text' \r\n                            label='Title'\r\n                            handleChange={this.handleChange}\r\n                            value={this.state.title} required \r\n                        />\r\n\r\n                        <FormInput \r\n                            name='text' type='text' \r\n                            label='Name'\r\n                            handleChange={this.handleChange}\r\n                            value={this.state.text} required\r\n                        />\r\n\r\n                        {/* <FormInput \r\n                            name='date' type='date' \r\n                            label=''\r\n                            handleChange={this.handleChange}\r\n                            value={this.state.date} required\r\n                        /> */}\r\n                            \r\n                        <div className='buttons'>\r\n                            <CustomButton inverted type='submit'>Add Task</CustomButton>\r\n                        </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {selectCurrentUser} from '../../redux/user/user.selector';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\nimport './todolist.component.scss';\r\nimport CreateItem from '../../components/createItem/createItem.component.jsx';\r\n\r\n\r\nconst TodoPage = (currentUser) =>{\r\n    \r\n    var lista = currentUser.currentUser? currentUser.currentUser.lista : null;\r\n    lista  = lista === [] || lista === ''? null : lista;\r\n    \r\n      \r\n    return (\r\n          <div className='todo-page'>\r\n              {\r\n                currentUser.currentUser?\r\n                   <CreateItem />\r\n                :\r\n                <Redirect to='../signin'/>\r\n              }\r\n              <div className=\"collection\">\r\n              <h2>Tasks</h2>\r\n                {\r\n                   lista?\r\n                    lista.map( (item) => (\r\n                        <CollectionItem key={item.id} item={item} completed={item.completed? 'completed' : ''} />\r\n                    )) \r\n\r\n                    :\r\n\r\n                    <div className=\"no-list-div\">\r\n                      <h2>No tasks available at the moment.</h2>\r\n                   </div>                 \r\n                }\r\n              </div>\r\n            \r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser : selectCurrentUser\r\n});\r\n\r\nexport default  connect(mapStateToProps)(TodoPage);","import React from 'react';\r\nimport './public_list.styles.scss';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {getAll,firestore} from '../../firebase/firebase.utils';\r\nimport {setCurrentList} from '../../redux/list/list.actions';\r\nimport {selectCurrentList} from'../../redux/list/list.selector';\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\nimport Header from '../../components/header-component/header-component.jsx';\r\nimport Footer from '../../components/footer/footer.component.jsx';\r\n\r\n\r\n\r\nclass PublicList extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    const {setCurrentList} = this.props;\r\n}\r\n    \r\n  componentWillMount(){\r\n    const {setCurrentList} = this.props;\r\n    getAll().then( s=>{\r\n      setCurrentList(s.lista);\r\n     })\r\n  }\r\n  componentDidMount(){\r\n    const {setCurrentList} = this.props;   \r\n\r\n      var uid = \"4hYmPE0ZvhPoHA0kYJaQu8KdrCs2\"\r\n      firestore.collection(`users/${uid}/lista/`)\r\n      .onSnapshot(function(doc) {\r\n        var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n        console.log(source, \" data2 : \", doc.docs.map( s=> s = s.data()));\r\n        setCurrentList( doc.docs.map( s=> s = s.data()));\r\n      });\r\n  }\r\n\r\n\r\n    render(){\r\n      var lista = this.props.currentList; \r\n\r\n        // var data = this.state.list;\r\n        // if(data && data.length>0 && data[0] && data[0].lista)\r\n        // lista = data.lista;\r\n        // else if(data.lista)lista=data.lista;\r\n        return (     \r\n          \r\n          <div className=\"public_list\"><Header /> \r\n\r\n            <div className=\"title\">\r\n            </div>\r\n            <div className=\"collection\">\r\n              {/* <CustomButton success onClick={()=>UpdateList()} >Atualizar Lista</CustomButton> */}\r\n                {\r\n                   lista?\r\n                    lista.map( (item) => (\r\n                        <CollectionItem key={item.id} item={item} completed={item.completed? 'completed' : ''} />\r\n                    )) \r\n\r\n                    :\r\n\r\n                    <div className=\"no-list-div\">\r\n                   </div>                 \r\n                }\r\n              </div>\r\n              <Footer />      \r\n            </div> \r\n        );\r\n           \r\n    }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentList: selectCurrentList,\r\n});\r\nconst mapDispatchToProps = dispatch =>({\r\n  setCurrentList: list => dispatch(setCurrentList(list))\r\n}); \r\nexport default connect(mapStateToProps,mapDispatchToProps)(PublicList);","import React from 'react';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component.jsx';\r\nimport CustomButton from '../custom-button/custom-button.component.jsx';\r\nimport {auth, signInWithGoogle} from '../../firebase/firebase.utils.js';\r\n\r\nexport default class SignIn extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n    handleSubmit = async event=>{\r\n        event.preventDefault();\r\n        const {email,password} = this.state;\r\n\r\n        try{\r\n            await auth.signInWithEmailAndPassword(email,password);\r\n            this.setState({email:'',password:''});\r\n\r\n        }catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n    handleChange = event => {\r\n        const {value, name} = event.target;\r\n        this.setState({ [name] : value});\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>Sign In</h2>\r\n                <span>With Email and Password.</span>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput \r\n                        name='email' type='email' \r\n                        label='Email'\r\n                        handleChange={this.handleChange}\r\n                        value={this.state.email} />\r\n                    \r\n                    <FormInput\r\n                        name='password' type='password'\r\n                        label='Password'\r\n                        handleChange={this.handleChange}  \r\n                        value={this.state.password}  />\r\n                        \r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit' >Sign In</CustomButton>\r\n                        <CustomButton onClick={signInWithGoogle} isGoogleSignIn >Sign with Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './sign-up.styles.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {auth, CreateUserProfileDocument} from '../../firebase/firebase.utils';\r\n\r\nclass SignUp extends React.Component{\r\n    constructor(){\r\n        super();\r\n        \r\n        this.state = {\r\n            displayName:'',\r\n            email:'',\r\n            password:'',\r\n            confirmPassword:''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event =>{\r\n        ///prevent default submit\r\n        event.preventDefault();\r\n        const { displayName,email,password,confirmPassword} = this.state;\r\n        if(password !== confirmPassword){\r\n            alert('Password dont match');\r\n            return\r\n        }\r\n        try{\r\n            const {user} = await auth.createUserWithEmailAndPassword(email,password);\r\n             await CreateUserProfileDocument(user,{displayName});\r\n             this.setState({\r\n                displayName:'',\r\n                email:'',\r\n                password:'',\r\n                confirmPassword:''\r\n             });\r\n        }catch(error){\r\n            if(error.code === \"auth/email-already-in-use\")\r\n                alert(\"Email already registered!\");\r\n            console.error(error);\r\n        }\r\n    }\r\n    handleChange = event =>{\r\n        const {name,value}  = event.target;\r\n        this.setState({ [name]: value});\r\n    }\r\n\r\n    render(){\r\n        const { displayName, email, password, confirmPassword} = this.state;\r\n        return (\r\n            <div className='sign-up'>\r\n                <h2 className='title'>\r\n                    Create Account\r\n                </h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                    type='text'\r\n                    name='displayName'\r\n                    value={displayName}\r\n                    onChange={this.handleChange}\r\n                    label='Nome'\r\n                    required\r\n                    />\r\n                    <FormInput\r\n                    type='text'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={this.handleChange}\r\n                    label='Email'\r\n                    required\r\n                    />\r\n                    <FormInput\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={this.handleChange}\r\n                    label='Password'\r\n                    required\r\n                    />\r\n                    <FormInput\r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    onChange={this.handleChange}\r\n                    label='Confirm your Password'\r\n                    required\r\n                    />\r\n                    <div className=\"buttons\">\r\n                        <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\n\r\nimport './sign-in.styles.scss';\r\nimport SignIn from '../../components/sign-in/sign-in.component.jsx';\r\nimport SignUp from '../../components/sign-up/sign-up.component.jsx';\r\n\r\nconst SignInAndSignUpPage = () => (\r\n    <div className='sign-in-and-sign-up'>\r\n        <SignIn />\r\n        <SignUp />\r\n    </div>\r\n)\r\nexport default SignInAndSignUpPage;","import React from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport './App.css';\r\n\r\nimport Header from './components/header-component/header-component.jsx';\r\nimport Footer from './components/footer/footer.component.jsx';\r\n\r\nimport {setCurrentUser} from './redux/user/user.actions';\r\n\r\nimport TodoPage from './pages/todolist/todolist.component.jsx';\r\nimport PublicList from './pages/public_list/public_list.component.jsx';\r\nimport SignInAndSignUpPage from './pages/sign-in/sign-in.component.jsx';\r\nimport {auth,firestore, CreateUserProfileDocument} from './firebase/firebase.utils';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {selectCurrentUser} from './redux/user/user.selector';\r\n\r\nclass App extends React.Component {\r\n\r\n  \r\n  unsubscribeFromAuth = null;\r\n\r\n  componentWillMount(){\r\n\r\n    const {setCurrentUser} = this.props;\r\n\r\n\r\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth=> {\r\n      if(userAuth){\r\n        const userRef = await CreateUserProfileDocument(userAuth);\r\n        \r\n        userRef.onSnapshot( {\r\n          includeMetadataChanges: true},snapShot =>{\r\n          setCurrentUser({\r\n            id:snapShot.id,\r\n            ...snapShot.data()\r\n          });\r\n        });\r\n      }\r\n        setCurrentUser(userAuth);\r\n        \r\n      });\r\n  }\r\n  componentDidMount(){\r\n\r\n    const {setCurrentUser} = this.props;\r\n\r\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth=> {\r\n      if(userAuth){\r\n        const userRef = await CreateUserProfileDocument(userAuth);\r\n        \r\n        userRef.onSnapshot( snapShot =>{\r\n          setCurrentUser({\r\n            id:snapShot.id,\r\n            ...snapShot.data()\r\n          });\r\n        });\r\n      }       \r\n      });    \r\n  }\r\n  \r\n  componentWillUnmount(){\r\n    this.unsubscribeFromAuth();\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        \r\n      \r\n\r\n        <Switch >\r\n          <Route  path='/publica' exact=\"true\" component={PublicList} />\r\n          <Route exact path='/'  render={()=> this.props.currentUser? (<TodoPage />) : (<SignInAndSignUpPage />) } />\r\n          <Redirect  to='/' />\r\n        </Switch>\r\n      \r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser\r\n});\r\nconst mapDispatchToProps = dispatch =>({\r\n  setCurrentUser: user => dispatch(setCurrentUser(user))\r\n}); \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import {UserActionTypes} from './user.types';\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser:null\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE,action) => {\r\n    switch(action.type) {\r\n        case UserActionTypes.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        case UserActionTypes.ADD_USER_ITEM:\r\n            return {\r\n                ...state,\r\n               currentUser: action.payload\r\n            }\r\n        case UserActionTypes.DELETE_USER_ITEM:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default userReducer;","import {ListActionTypes} from './list.types';\r\n\r\nconst INITIAL_STATE = {\r\n    currentList:[]\r\n};\r\n\r\nconst listReducer = (state = INITIAL_STATE,action) => {\r\n    switch(action.type) {\r\n        case ListActionTypes.SET_CURRENT_LIST:\r\n            console.log('try',action);\r\n            return {\r\n                ...state,\r\n                currentList: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default listReducer;","import {combineReducers } from 'redux';\r\n\r\n\r\nimport userReducer from './user/user.reducer.jsx';\r\nimport listReducer from './list/list.reducer.jsx';\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    list:listReducer\r\n})","import {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer.jsx';\r\n\r\nconst middlewares = [logger]; // pode ter um ou mais middlewares...\r\n\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport  { Provider} from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport PublicList from './pages/public_list/public_list.component.jsx';\r\n\r\n\r\nReactDOM.render(\r\n    \r\n    <Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL+'/'}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route path=\"/lista/publica\" component={PublicList} />\r\n          <Redirect  to='/' />\r\n        </Switch>\r\n        \r\n    </BrowserRouter>\r\n    </Provider>\r\n    , \r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}